buildscript {
    repositories {
      mavenCentral()
    }
    dependencies {
        classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.0'
    }
}

plugins {
    id 'com.adarshr.test-logger' version '1.1.2'
    id 'com.github.johnrengelman.shadow' version '5.1.0'
    id 'org.ajoberstar.grgit' version '2.2.1'
    id 'org.sonarqube' version '3.0'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: "jacoco"
apply plugin: "com.github.johnrengelman.shadow"


sonarqube {
    properties {
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.projectKey", "org.sonarqube:cvs-svc-doc-gen"
        property "sonar.projectName", "cvs-svc-doc-gen"
        property "sonar.projectVersion", "1.0"
        property "sonar.sourceEncoding", "UTF-8"
    }
}

group 'uk.dvsa.mot'
version "${version}"

mainClassName = "uk.dvsa.mot.PdfGenerator"

sourceCompatibility = 11

jacocoTestReport {
    group = "Reporting"
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/reports/coverage")
        // html.destination file("./reports/coverage")
    }
}


testlogger {
    theme 'mocha'
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

repositories {
   mavenCentral()
}

dependencies {
    compile group: 'com.amazonaws', name: 'aws-lambda-java-core', version: '1.1.0'
    compile group: "com.github.jknack", name: "handlebars", version: "4.2.0"
    compile group: 'org.xhtmlrenderer', name: 'flying-saucer-pdf-openpdf', version: '9.1.20'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.15.0'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.15.0'
    compile group: 'com.amazonaws', name: 'aws-lambda-java-log4j2', version: '1.5.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.22.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.22.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.22.1'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    compile fileTree(dir: 'jars', include: '*.jar')
    testCompile group: 'junit', name: 'junit', version: '4.13.1'
    testCompile group: 'org.jsoup', name: 'jsoup', version: '1.15.3'
    testCompile group: 'commons-io', name: 'commons-io', version: '2.14.0'
    testCompile group: 'com.itextpdf', name: 'itextpdf', version: '5.5.12'
}

task buildZip(type: Zip) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtime
    }
}

task buildManifest(type: Copy) {
    from 'src/main/filteredResources'
    into 'build/resources/main'

    def branchName =  project.findProperty('branchName') ?: grgit.branch.current().getName()
    def commitId = project.findProperty('commitId') ?: grgit.head().getId()
    println "Commit id: " + commitId
    println "Branch name: " + branchName

    expand(gitCommitId: commitId, gitBranch: branchName)
}

buildZip.dependsOn buildManifest
build.dependsOn buildZip
